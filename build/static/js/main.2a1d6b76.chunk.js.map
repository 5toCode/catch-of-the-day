{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","components/Order.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","fish","name","price","parseFloat","status","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","key","index","updatedFish","updateFish","onChange","onClick","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","console","log","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","Object","keys","fishes","map","loadSampleFishes","Order","renderOrder","count","order","isAvailable","transitionOptions","classNames","timeout","enter","exit","component","removeFromOrder","orderIds","total","reduce","prevTotal","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","samplefishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.2a1d6b76.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { getFunName } from '../helpers';\n\nclass StorePicker extends React.Component {\n  // constructor() {\n  //   super();\n  //   this.goToStore = this.goToStore.bind(this);\n  // }\n\n  myInput = React.createRef();\n  static propTypes = {\n    history: PropTypes.object,\n  }\n\n  goToStore = event => {\n    // stop the form from submitting\n    event.preventDefault();\n    // get the text from the input\n    const storeName = this.myInput.current.value;\n    // change the page to /store/whatever-they-entered\n    this.props.history.push(`/store/${storeName}`);\n  }\n  render() {\n    return (\n      <Fragment>\n        <p>Fish</p>\n        <form className=\"store-selector\" onSubmit={this.goToStore}>\n          <h2>Please Enter a Store</h2>\n          <input\n            type=\"text\"\n            ref={this.myInput}\n            required\n            placeholder=\"Store Name\"\n            defaultValue={getFunName()}\n          />\n          <button type=\"submit\">Visit Store →</button>\n        </form>\n      </Fragment>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = (props) => (\n  <header className=\"top\">\n    <h1>\n      Catch\n      <span className=\"ofThe\">\n        <span className=\"of\">of</span>\n        <span className=\"the\">the</span>\n      </span>\n      Day\n    </h1>\n    <h3 className=\"tagline\">\n      <span>{props.tagline}</span>\n    </h3>\n  </header>\n);\n\n// class Header extends React.Component {\n//   render() {\n//     return (\n//       <header className=\"top\">\n//         <h1>Catch\n//         <span className=\"ofThe\">\n//           <span className=\"of\">of</span>\n//           <span className=\"the\">the</span>\n//         </span>\n//         Day</h1>\n//         <h3 className=\"tagline\">\n//           <span>{this.props.tagline}</span>\n//         </h3>\n//       </header>\n//     )\n//   }\n// }\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddFishForm extends React.Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  static propTypes = {\n    addFish: PropTypes.func,\n  }\n  \n  createFish = (event) => {\n    event.preventDefault();\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value,\n    }\n    this.props.addFish(fish);\n    // refresh the form\n    event.currentTarget.reset();\n  }\n  \n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n        <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n        <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\n        <button type=\"submit\">Add Fish</button>\n      </form>\n    );\n  }\n}\n\nexport default AddFishForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditFishForm extends React.Component {\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    index: PropTypes.string,\n    updateFish: PropTypes.func,\n  }\n  handleChange = (event) => {\n    const key = this.props.index;\n    const updatedFish = {\n      ...this.props.fish,\n      [event.currentTarget.name]: event.currentTarget.value,\n    };\n    this.props.updateFish(key, updatedFish);\n  };\n\n  render() {\n    return (\n      <div className=\"fish-edit\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={this.handleChange}\n          value={this.props.fish.name}\n        />\n        <input\n          type=\"text\"\n          name=\"price\"\n          onChange={this.handleChange}\n          value={this.props.fish.price}\n        />\n        <select\n          type=\"text\"\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.fish.status}\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.fish.desc}\n        />\n        <input\n          type=\"text\"\n          name=\"image\"\n          onChange={this.handleChange}\n          value={this.props.fish.image}\n        />\n        <button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>\n      </div>\n    );\n  }\n}\n\nexport default EditFishForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = (props) => (\n  <nav className=\"login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage your store's inventory</p>\n    <button\n      className=\"github\"\n      onClick={() => props.authenticate('Github')}\n    >\n      Log In With Github\n    </button>\n    <button\n      className=\"twitter\"\n      onClick={() => props.authenticate('Twitter')}\n    >\n      Log In With Twitter\n    </button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired,\n};\n\nexport default Login;\n","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: 'AIzaSyAdSM3c1jYgq_EmrqtP6_uffNOroeoDQyk',\n  authDomain: 'catch-of-the-day-5tocode.firebaseapp.com',\n  databaseURL: 'https://catch-of-the-day-5tocode-default-rtdb.firebaseio.com',\n  // projectId: 'catch-of-the-day-5tocode',\n  // storageBucket: 'catch-of-the-day-5tocode.appspot.com',\n  // messagingSenderId: '560551408448',\n  // appId: '1:560551408448:web:5220454720bb51783200a5',\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\nexport { firebaseApp };\n\nexport default base;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseApp } from '../base';\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    addFish: PropTypes.func,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func,\n  };\n\n  state = {\n    uid: null,\n    owner: null,\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler( { user });\n      }\n    })\n  }\n\n  authHandler = async (authData) => {\n    // 1 - look up the current store in the firebase database\n    const store = await base.fetch(this.props.storeId, { context: this });\n    console.log(store);\n    // 2- claim it if there is no owner\n    if (!store.owner) {\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid,\n      });\n    }\n    // 3 - set the state of the inventory component to reflect the current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid,\n    });\n  };\n\n  authenticate = (provider) => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\n  };\n\n  logout = async () => {\n    console.log('logging out!');\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  }\n\n  render() {\n    const logout = <button onClick={this.logout}>Log Out</button>\n    // check if they are logged in\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n\n    // check if they are not the owner of the store\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry, you are not the owner!</p>\n          {logout}\n        </div>\n      );\n    }\n    // they must be the owner, just render the inventory\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map((key) => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nclass Order extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func,\n  }\n  renderOrder = (key) => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === 'available';\n    const transitionOptions = {\n      classNames: \"order\",\n      key,\n      timeout: { enter: 500, exit: 500 }\n    }\n\n    // make sure the fish are there from firebase\n    if (!fish) return null;\n\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            Sorry, {fish ? fish.name : 'fish'} is no longer available!\n          </li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition\n                classNames=\"count\"\n                key={count}\n                timeout={{ enter: 500, exit: 500 }}\n              >\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            {count === 1 ? 'lb' : 'lbs'} {fish.name}\n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>\n              &times;\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === 'available';\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        {/* <ul className=\"order\">\n        {orderIds.map(this.renderOrder)}\n        </ul> */}\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\n\nclass Fish extends React.Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    addToOrder: PropTypes.func,\n  }\n  render() {\n    const { image, name, price, desc, status } = this.props.details;\n    const isAvailable = status === 'available';\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">\n          {name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button disabled={!isAvailable} onClick={() => this.props.addToOrder(this.props.index)}>\n          {isAvailable ? 'Add To Order' : 'Sold Out!'}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Fish;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Inventory from './Inventory';\nimport Order from './Order';\nimport samplefishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {},\n  };\n\n  static propTypes = {\n    match: PropTypes.object,\n  }\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    // reinstate localstorage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({\n        order: JSON.parse(localStorageRef),\n      });\n    }\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: 'fishes',\n    });\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\n      this.props.match.params.storeId,\n      JSON.stringify(this.state.order)\n    );\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addFish = (fish) => {\n    // take a copy of the existing state\n    const fishes = { ...this.state.fishes };\n    // Add our new fish to that fishes variable\n    fishes[`fish${Date.now()}`] = fish;\n    // set the new fishes object to state\n    this.setState({\n      fishes: fishes,\n    });\n  };\n\n  updateFish = (key, updatedFish) => {\n    // take a copy of the current state\n    const fishes = { ...this.state.fishes };\n    // update that fish\n    fishes[key] = updatedFish;\n    // set the new state using setState\n    this.setState({\n      fishes: fishes,\n    });\n  };\n\n  deleteFish = (key) => {\n    // take a copy of state\n    const fishes = { ...this.state.fishes };\n    // set the fish we want to delete to null (for firebase)\n    fishes[key] = null;\n    // update state\n    this.setState({\n      fishes: fishes,\n    });\n  };\n\n  loadSampleFishes = () => {\n    this.setState({\n      fishes: samplefishes,\n    });\n  };\n\n  addToOrder = (key) => {\n    // take a copy of state\n    const order = { ...this.state.order };\n    // either add to the order, or update the qty\n    order[key] = order[key] + 1 || 1;\n    // call setState to update our state object\n    this.setState({\n      order: order,\n    });\n  };\n\n  removeFromOrder = (key) => {\n    const order = { ...this.state.order };\n    delete order[key];\n    this.setState({ order });\n  };\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map((key) => (\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\n\nconst NotFound = () => (\n  <div>\n    <h2>Not Found!!!</h2>\n  </div>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport App from './App';\nimport NotFound from './NotFound';\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport './css/style.css';\n\nrender(<Router />, document.querySelector('#main'));\n"],"sourceRoot":""}